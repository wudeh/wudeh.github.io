(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{497:function(s,a,e){"use strict";e.r(a);var t=e(3),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"indexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexof"}},[s._v("#")]),s._v(" indexOf")]),s._v(" "),a("ul",[a("li",[s._v("查找字符串首次出现的位置,如果找到返回该字符串的下标值,下标从0开始查找,找不到返回-1。")]),s._v(" "),a("li",[s._v("indexOf第二个参数，默认可填，第二个参数理解就是从第几位开始查找, 如果找不到返回 -1")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello 秦司令';\nconsole.log(str.indexOf('秦')) // 6 \nconsole.log(str.indexOf('a')) // -1\nconsole.log(str.indexOf('秦', 7)) // -1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"lastindexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lastindexof"}},[s._v("#")]),s._v(" lastIndexOf")]),s._v(" "),a("p",[s._v("lastIndexOf跟indexOf方法一样,只不过它查找字符串最后出现的位置,同样,查找到返回下标位置,找不到为-1。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello 秦司令秦';\nconsole.log(str.lastIndexOf('秦')) // 9\nconsole.log(str.lastIndexOf('a')) // -1 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"charat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#charat"}},[s._v("#")]),s._v(" charAt")]),s._v(" "),a("p",[s._v("查找下标,返回对应的内容,如果没有该下标,则返回空字符串。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello 秦司令秦';\nconsole.log(str.charAt(0)) // h\nconsole.log(str.charAt(6)) // 秦 \nconsole.log(str.charAt(19)) //空  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"charcodeat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#charcodeat"}},[s._v("#")]),s._v(" charCodeAt")]),s._v(" "),a("p",[s._v("charCodeAt是文字所存的Unicode编码,不经常使用。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello 秦司令秦';\nvar n = '鸟'\nconsole.log(str.charCodeAt()) //104\nconsole.log(n.charCodeAt())  //40479\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v('上面代码中,str的返回值就是它的字符串首字符串 h 在计算机内所存的编码,charCodeAt方法只查找首字符串,想要全部获取一下编码,遍历一下就行, n的变量 "鸟" 返回值 40479 它也是在计算机内所存的编码。')]),s._v(" "),a("h3",{attrs:{id:"string-fromcharcode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-fromcharcode"}},[s._v("#")]),s._v(" String.fromCharCode")]),s._v(" "),a("p",[s._v("该方法跟上面的charCodeAt方法正好相反,这两方法搭配是一套,该方法是把所存的编码在转换为文字。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("console.log(String.fromCharCode(104))  //h\nconsole.log(String.fromCharCode(40479)) //鸟\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"substring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substring"}},[s._v("#")]),s._v(" substring")]),s._v(" "),a("p",[s._v("一位参数是截取掉几位字符,二位参数是从哪个位置开始,到那个位置结束的前一位,不包括结束的位置,不会改变原字符串。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello 秦司令秦';\nconsole.log(str.substring(1))  // ello 秦司令秦\nconsole.log(str.substring(1,2)) // e\nconsole.log(str) // 原字符串不变\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"substr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substr"}},[s._v("#")]),s._v(" substr")]),s._v(" "),a("p",[s._v("substr跟substring差不多,但是该方法要比substring强大一些,它可以有负数,一位参数是从哪个位置开始,二位参数是截取掉几位字符,截取几位,不改变原字符串。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello 秦司令秦';\nconsole.log(str.substr(1))  // ello 秦司令秦\nconsole.log(str.substr(1,2)) // el\nconsole.log(str.substr(-4,4)) // 秦司令秦\nconsole.log(str)  //不会改变原字符串\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"slice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[s._v("#")]),s._v(" slice")]),s._v(" "),a("p",[s._v("该方法也是截取字符,它跟substring方法几乎一样,只不过该方法也可以写负数,其它的使用方式,都跟substring一样,该方法也不会改变原字符串。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello 秦司令秦';\nconsole.log(str.slice(1))  // ello 秦司令秦\nconsole.log(str.slice(1,3)) // el\nconsole.log(str.slice(-4,-2)) // 秦司\nconsole.log(str)  // 不会改变原字符串\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[s._v("#")]),s._v(" split")]),s._v(" "),a("p",[s._v("该方法是字符串分割为数组,参数是以什么方式分割。同样不会改变原字符串。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var str = \'hello秦司令秦\';\nvar str1 = \'hello 秦司令\';\nconsole.log(str.split(\'\'))  //["h", "e", "l", "l", "o", "秦", "司", "令", "秦"]\nconsole.log(str1.split(\' \')) //["hello", "秦司令"]\nconsole.log(str1,str) //未发生改变\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"tolowercase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tolowercase"}},[s._v("#")]),s._v(" toLowerCase")]),s._v(" "),a("p",[s._v("将字符串转换为小写,不会改变原字符串。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str1 = 'HELLO';\nconsole.log(str1.toLowerCase())  // hello\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"touppercase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#touppercase"}},[s._v("#")]),s._v(" toUpperCase")]),s._v(" "),a("p",[s._v("将字符串转换为大写,不会改变原字符串。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello秦司令秦';\nconsole.log(str.toUpperCase())  //HELLO秦司令秦\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[s._v("#")]),s._v(" replace")]),s._v(" "),a("p",[s._v("替换字符串,第一个值为被替换的值,第二个值为替换的值,不会改变原字符串。只替换第一个匹配到的字符串。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello秦司令秦';\nconsole.log(str.replace('h','秦'))  //秦ello秦司令秦\nconsole.log(str)  // 未发生改变\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"replaceall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replaceall"}},[s._v("#")]),s._v(" replaceAll")]),s._v(" "),a("p",[s._v("和 "),a("code",[s._v("replace")]),s._v(" 用法一样，替换全部匹配到的字符串")]),s._v(" "),a("h3",{attrs:{id:"match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[s._v("#")]),s._v(" match")]),s._v(" "),a("p",[s._v("匹配字符串,查找到返回一个数组对象,数组对象里有 匹配的值 查找字符串的下标 和 原字符串内容,找不到返回null")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello秦司令秦';\t\t\nconsole.log(str.match('秦'))  // [\"秦\", index: 5, input: \"hello秦司令秦\", groups: undefined]\nconsole.log(str.match('1'))\t // null\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#search"}},[s._v("#")]),s._v(" search")]),s._v(" "),a("p",[s._v("该方法跟indexOf一模一样,查找字符串首次出现的位置,如果找到返回该字符串的下标值,下标从0开始查找,找不到返回-1。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello秦司令秦';\t\t\nconsole.log(str.search('o'))  //4\nconsole.log(str.search('d'))  //-1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"repeat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repeat"}},[s._v("#")]),s._v(" repeat")]),s._v(" "),a("p",[s._v("该方法的参数是复制几遍字符串。不会改变原字符串。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello秦司令秦';\nconsole.log(str.repeat(3)) //hello秦司令秦hello秦司令秦hello秦司令秦\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"includes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[s._v("#")]),s._v(" includes")]),s._v(" "),a("p",[s._v('返回Boolean值,查找字符串里面有没有该值。第一位参数是 "值" , 第二位参数是下标。')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello秦司令秦';\t\nconsole.log(str.includes('秦')) //true\nconsole.log(str.includes('秦',5)) //true\nconsole.log(str.includes('啦')) //false\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"startswith"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#startswith"}},[s._v("#")]),s._v(" startsWith")]),s._v(" "),a("p",[s._v('返回Boolean值,查找字符串开头是不是该值。第一位参数是 "值" , 第二位参数是下标。')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello秦司令秦';\t\nconsole.log(str.startsWith('秦')) //false\nconsole.log(str.startsWith('秦',5)) //true\nconsole.log(str.startsWith('h')) //true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"endswith"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#endswith"}},[s._v("#")]),s._v(" endsWith")]),s._v(" "),a("p",[s._v('返回Boolean值,查找字符串结尾是不是该值。第一位参数是 "值" , 第二位参数是下标,下标必须往后查找一位,如果要找的下标是5,就必须写6')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'hello秦司令秦';\t\nconsole.log(str.endsWith('秦')) //true\nconsole.log(str.endsWith('秦',6)) //true\nconsole.log(str.endsWith('h')) //false\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"string-padding-字符串填充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-padding-字符串填充"}},[s._v("#")]),s._v(" String padding-字符串填充")]),s._v(" "),a("p",[s._v("将字符创添加到原始字符串的开头或结尾。 padStart和padEnd都允许接受两个参数：")]),s._v(" "),a("ul",[a("li",[s._v("targetLength：当前字符串需要填充到的目标长度。如果这个数值小于当前字符串的长度，则返回当前字符串本身。")]),s._v(" "),a("li",[s._v('padString：(可选)填充字符串。如果字符串太长，使填充后的字符串长度超过了目标长度，则只保留最左侧的部分，其他部分会被截断，此参数的缺省值为 " "。')])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let str = 'Sam'\nstr.padStart(6,'its')// 'itsSam'\nstr.padEnd(6,'its')// 'Samits'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);