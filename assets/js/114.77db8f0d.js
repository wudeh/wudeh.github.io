(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{561:function(v,_,i){"use strict";i.r(_);var e=i(3),n=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"transition"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#transition"}},[v._v("#")]),v._v(" transition")]),v._v(" "),_("p",[v._v("简单的动画可以用 transition 属性来指定过渡的属性，复杂的就可以用到 animation 了。")]),v._v(" "),_("h2",{attrs:{id:"animation"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#animation"}},[v._v("#")]),v._v(" animation")]),v._v(" "),_("p",[v._v("animation 共有 8 个属性：")]),v._v(" "),_("ul",[_("li",[_("p",[_("code",[v._v("animation-name")]),v._v("：指定 @keyframes 动画的名称。")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("animation-duration")]),v._v("：指定动画完成一个周期所需要时间，单位秒（s）或毫秒（ms），默认是 0。")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("animation-timing-function")]),v._v("：指定动画计时函数，即动画的速度曲线，默认是 "),_("code",[v._v("ease")]),v._v("。"),_("code",[v._v("linear")]),v._v("、"),_("code",[v._v("ease")]),v._v("、"),_("code",[v._v("ease-in")]),v._v("、"),_("code",[v._v("ease-out")]),v._v("、"),_("code",[v._v("ease-in-out")]),v._v("。这些值其实都是 "),_("code",[v._v("cubic-bezier(n,n,n,n)")]),v._v(" 的特例。它们被称为贝塞尔曲线。一般使用 "),_("code",[v._v("linear")]),v._v(" 即匀速动画。")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("animation-delay")]),v._v("：指定动画延迟时间，即动画要不要延时开始，默认是 0。也可以是负数，负数的话相当于提前从什么时候运动，如果设置了一个 "),_("code",[v._v("div")]),v._v(" 在 "),_("code",[v._v("2s")]),v._v(" 时间内宽度从 "),_("code",[v._v("0px")]),v._v(" 增加到 "),_("code",[v._v("100px")]),v._v("，又设置了延迟时间为 "),_("code",[v._v("-1s")]),v._v("，且匀速运动，则动画将从宽度 "),_("code",[v._v("50px")]),v._v(" 匀速增加到"),_("code",[v._v("100px")]),v._v(",且过渡时间为 "),_("code",[v._v("1s")]),v._v(";"),_("code",[v._v("-1s")]),v._v(" 表示提前一秒。")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("animation-iteration-count")]),v._v("：指定动画播放的次数，默认是 1，无限播放时使用 infinite。")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("animation-play-state")]),v._v("：指定动画播放状态，正在运行或暂停。默认值 running 表示播放， paused 表示暂停。")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("animation-direction")]),v._v("：指定动画播放的方向。默认是 normal。")])]),v._v(" "),_("li",[_("p",[v._v("normal 默认值。")])]),v._v(" "),_("li",[_("p",[v._v("reverse 表示动画反向播放。")])]),v._v(" "),_("li",[_("p",[v._v("alternate 表示正向和反向交叉进行。")])]),v._v(" "),_("li",[_("p",[v._v("alternate-reverse 表示反向和正向交叉进行。")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("animation-fill-mode")]),v._v("：指定动画填充模式。默认是 none。")])]),v._v(" "),_("li",[_("p",[v._v("forwards，表示，动画完成后，元素状态保持为最后一帧的状态。")])]),v._v(" "),_("li",[_("p",[v._v("backwards，表示，有动画延迟时，动画开始前，元素状态保持为第一帧的状态。")])]),v._v(" "),_("li",[_("p",[v._v("both，表示上述二者效果都有。")])])])])}),[],!1,null,null,null);_.default=n.exports}}]);