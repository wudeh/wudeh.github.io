(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{572:function(s,n,a){"use strict";a.r(n);var t=a(3),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("什么是单向数据流？")]),s._v(" "),n("ul",[n("li",[s._v("父级 prop 的更新会向下流动到子组件中，每次父级组件发生更新时，子组件中所有的 prop 都将会刷新为最新的值\n众所周知，众所周知，vue是单向数据流，一般我们也不会在子组件里面修改父组件传进来的值。但是总有意外的时候：")]),s._v(" "),n("li",[s._v("当子组件接收父组件传递过来的是基本类型的数据的时候，修改会触发报错")]),s._v(" "),n("li",[s._v("如果接收的是引用类型，修改不会报错，因为修改引用类型相当于在父组件修改数据")])]),s._v(" "),n("p",[s._v("那应该怎么修改呢？以数组为例")]),s._v(" "),n("ul",[n("li",[s._v("data中拷贝一份，注意引用类型需要深拷贝，根据需求可以watch监听")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("data() {\n    return {\n        newList: this.list.slice()\n    }\n},\nwatch: {\n    list(newVal) {\n        this.newList = newVal\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ul",[n("li",[s._v("通过计算属性修改")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("computed: {\n    nList() {\n        return this.list.filter(item => {\n            return item.isChecked\n        })\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("sync修饰符\n父组件 传进去的时候加上 .sync")])]),s._v(" "),n("p",[s._v("子组件 通过this.$emit(‘update:xxx’, params)")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 父组件\n<todo-list :list.sync=\"list\" />\n \n// 子组件\nmethodName(index) {\n    this.$emit('update:list', this.newList)\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);