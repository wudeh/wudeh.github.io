(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{501:function(n,s,a){"use strict";a.r(s);var t=a(3),e=Object(t.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("blockquote",[s("p",[n._v("兜兜转转绕晕我的 this")])]),n._v(" "),s("h2",{attrs:{id:"全局上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局上下文"}},[n._v("#")]),n._v(" 全局上下文")]),n._v(" "),s("p",[n._v("非严格模式和严格模式中this都是指向顶层对象（浏览器中是window）。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("this === window // true\n'use strict'\nthis === window;\nthis.name = '若川';\nconsole.log(this.name); // 若川\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br")])]),s("h2",{attrs:{id:"函数上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数上下文"}},[n._v("#")]),n._v(" 函数上下文")]),n._v(" "),s("h3",{attrs:{id:"普通函数调用模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通函数调用模式"}},[n._v("#")]),n._v(" 普通函数调用模式")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 非严格模式\nvar name = 'window';\nvar doSth = function(){\n    console.log(this.name);\n}\ndoSth(); // 'window'\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 非严格模式\nlet name2 = 'window2';\nlet doSth2 = function(){\n    console.log(this === window);\n    console.log(this.name2);\n}\ndoSth2() // true, undefined\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br")])]),s("p",[n._v("这个例子中let没有给顶层对象中（浏览器是window）添加属性，window.name2和window.doSth都是undefined。")]),n._v(" "),s("p",[n._v("严格模式中，普通函数中的this则表现不同，表现为undefined。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 严格模式\n'use strict'\nvar name = 'window';\nvar doSth = function(){\n    console.log(typeof this === 'undefined');\n    console.log(this.name);\n}\ndoSth(); // true，// 报错，因为this是undefined\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br")])]),s("h3",{attrs:{id:"对象中的函数-方法-调用模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象中的函数-方法-调用模式"}},[n._v("#")]),n._v(" 对象中的函数（方法）调用模式")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("var name = 'window';\nvar doSth = function(){\n    console.log(this.name);\n}\nvar student = {\n    name: 'wudeh',\n    doSth: doSth,\n    other: {\n        name: 'other',\n        doSth: doSth,\n    }\n}\nstudent.doSth(); // 'wudeh'\nstudent.other.doSth(); // 'other'\n// 用call类比则为：\nstudent.doSth.call(student);\n// 用call类比则为：\nstudent.other.doSth.call(student.other);\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br")])]),s("p",[n._v("但往往会把对象中的函数赋值给一个变量，这样其实又变成普通函数了，所以使用普通函数的规则。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("var studentDoSth = student.doSth;\nstudentDoSth(); // 'window'\n// 用call类比则为：\nstudentDoSth.call(undefined);\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("h3",{attrs:{id:"call、apply、bind-调用模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#call、apply、bind-调用模式"}},[n._v("#")]),n._v(" call、apply、bind 调用模式")]),n._v(" "),s("p",[n._v("需要注意的是，指定的this值并不一定是该函数执行时真正的this值，如果这个函数处于非严格模式下，则指定为null和undefined的this值会自动指向全局对象(浏览器中就是window对象)，同时值为原始值(数字，字符串，布尔值)的this会指向该原始值的自动包装对象。")]),n._v(" "),s("ul",[s("li",[n._v("相同点：改变 this 指向为函数中的第一个参数")]),n._v(" "),s("li",[n._v("不同点：call 其余参数是一个一个的形式；apply 其余参数是一个数组；bind 返回一个改变了 this 指向的函数，这个返回的函数的 this 的指向不会变，原函数可以变")])]),n._v(" "),s("h3",{attrs:{id:"箭头函数调用模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数调用模式"}},[n._v("#")]),n._v(" 箭头函数调用模式")]),n._v(" "),s("p",[n._v("箭头函数和普通函数的重要区别：")]),n._v(" "),s("ul",[s("li",[n._v("1、没有自己的this、super、arguments和new.target绑定。")]),n._v(" "),s("li",[n._v("2、不能使用new来调用。 3、没有原型对象。 4、不可以改变this的绑定。 5、形参名称不能重复。")])]),n._v(" "),s("p",[n._v("箭头函数中没有this绑定，必须通过查找作用域链来决定其值。 如果箭头函数被非箭头函数包含，则this绑定的是最近一层非箭头函数的this，否则this的值则被设置为全局对象。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("var name = 'window';\nvar student = {\n    name: 'wudeh',\n    doSth: function(){\n        // var self = this;\n        var arrowDoSth = () => {\n            // console.log(self.name);\n            console.log(this.name);\n        }\n        arrowDoSth();\n    },\n    arrowDoSth2: () => {\n        console.log(this.name);\n    }\n}\nstudent.doSth(); // 'wudeh'\nstudent.arrowDoSth2(); // 'window'\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br")])]),s("p",[n._v("其实就是相当于箭头函数外的this是缓存的该箭头函数上层的普通函数的this。如果没有普通函数，则是全局对象（浏览器中则是window）。\n也就是说无法通过call、apply、bind绑定箭头函数的this(它自身没有this)。而call、apply、bind可以绑定缓存箭头函数上层的普通函数的this。\n比如：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("var student = {\n    name: 'wudeh',\n    doSth: function(){\n        console.log(this.name);\n        return () => {\n            console.log('arrowFn:', this.name);\n        }\n    }\n}\nvar person = {\n    name: 'person',\n}\nstudent.doSth().call(person); // 'wudeh'  'arrowFn:' 'wudeh'\nstudent.doSth.call(person)(); // 'person' 'arrowFn:' 'person'\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br")])]),s("h3",{attrs:{id:"构造函数调用模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数调用模式"}},[n._v("#")]),n._v(" 构造函数调用模式")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function Student(name){\n    this.name = name;\n    console.log(this); // {name: 'wudeh'}\n    // 相当于返回了\n    // return this;\n}\nvar result = new Student('wudeh');\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br")])]),s("p",[n._v("使用new操作符调用函数，会自动执行以下步骤。")]),n._v(" "),s("ul",[s("li",[n._v("创建了一个全新的对象。")]),n._v(" "),s("li",[n._v("这个对象会被执行[[Prototype]]（也就是__proto__）链接。")]),n._v(" "),s("li",[n._v("生成的新对象会绑定到函数调用的this。")]),n._v(" "),s("li",[n._v("通过new创建的每个对象将最终被[[Prototype]]链接到这个函数的prototype对象上。")]),n._v(" "),s("li",[n._v("如果函数没有返回对象类型Object(包含Functoin, Array, Date, RegExg, Error)，那么new表达式中的函数调用会自动返回这个新的对象。")])]),n._v(" "),s("p",[n._v("可以知道：new操作符调用时，this指向生成的新对象。 特别提醒一下，new调用时的返回值，如果没有显式返回对象或者函数，才是返回生成的新对象。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function Student(name){\n    this.name = name;\n    // return function f(){};\n    // return {};\n}\nvar result = new Student('wudeh');\nconsole.log(result); {name: 'wudeh'}\n// 如果返回函数f，则result是函数f，如果是对象{}，则result是对象{}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br")])]),s("h3",{attrs:{id:"原型链中的调用模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链中的调用模式"}},[n._v("#")]),n._v(" 原型链中的调用模式")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function Student(name){\n    this.name = name;\n}\nvar s1 = new Student('若川');\nStudent.prototype.doSth = function(){\n    console.log(this.name);\n}\ns1.doSth(); // '若川'\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br")])]),s("p",[n._v("对象上的方法调用模式，自然是指向生成的新对象。 如果该对象继承自其它对象，同样会通过原型链查找。")]),n._v(" "),s("h3",{attrs:{id:"dom事件处理函数调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom事件处理函数调用"}},[n._v("#")]),n._v(" DOM事件处理函数调用")]),n._v(" "),s("p",[n._v("addEventerListener、attachEvent、onclick")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("<button class=\"button\">onclick</button>\n<ul class=\"list\">\n    <li>1</li>\n    <li>2</li>\n    <li>3</li>\n</ul>\n<script>\n    var button = document.querySelector('button');\n    button.onclick = function(ev){\n        console.log(this);\n        console.log(this === ev.currentTarget); // true\n    }\n    var list = document.querySelector('.list');\n    list.addEventListener('click', function(ev){\n        console.log(this === list); // true\n        console.log(this === ev.currentTarget); // true\n        console.log(this);\n        console.log(ev.target);\n    }, false);\n<\/script>\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br")])]),s("p",[s("code",[n._v("onclick")]),n._v("和"),s("code",[n._v("addEventerListener")]),n._v("是指向绑定事件的元素。\n一些浏览器，比如IE6~IE8下使用attachEvent，this指向是window。\n顺便提下：面试经常考察ev.currentTarget和ev.target的区别。\nev.currentTarget是绑定事件的元素，而ev.target是当前触发事件的元素。")]),n._v(" "),s("p",[n._v("内联事件处理函数调用")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('<button class="btn1" onclick="console.log(this === document.querySelector(\'.btn1\'))">点我呀</button>\n<button onclick="console.log((function(){return this})());">再点我呀</button>\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br")])]),s("p",[n._v("第一个是button本身，所以是true，第二个是window。这里跟严格模式没有关系。")]),n._v(" "),s("h3",{attrs:{id:"优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[n._v("#")]),n._v(" 优先级")]),n._v(" "),s("p",[n._v("箭头函数的this是上层普通函数的this或者是全局对象（浏览器中是window），所以排除，不算优先级。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("var name = 'window';\nvar person = {\n    name: 'person',\n}\nvar doSth = function(){\n    console.log(this.name);\n    return function(){\n        console.log('return:', this.name);\n    }\n}\nvar Student = {\n    name: '若川',\n    doSth: doSth,\n}\n// 普通函数调用\ndoSth(); // window\n// 对象上的函数调用\nStudent.doSth(); // '若川'\n// call、apply 调用\nStudent.doSth.call(person); // 'person'\nnew Student.doSth.call(person);\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br")])]),s("p",[n._v("如果是Student.doSth.call(person)先执行的情况下，那new执行一个函数。是没有问题的。\n然而事实上，这代码是报错的。运算符优先级是new比点号低，所以是执行new (Student.doSth.call)(person)\n而Function.prototype.call，虽然是一个函数（apply、bind也是函数），跟箭头函数一样，不能用new调用。所以报错了。")]),n._v(" "),s("blockquote",[s("p",[n._v("Uncaught TypeError: Student.doSth.call is not a constructor")])]),n._v(" "),s("p",[n._v("这是因为函数内部有两个不同的方法：[[Call]]和[[Constructor]]。\n当使用普通函数调用时，[[Call]]会被执行。当使用构造函数调用时，[[Constructor]]会被执行。call、apply、bind和箭头函数内部没有[[Constructor]]方法。")]),n._v(" "),s("p",[n._v("它们的优先级是new 调用 > call、apply、bind 调用 > 对象上的函数调用 > 普通函数调用。")])])}),[],!1,null,null,null);s.default=e.exports}}]);